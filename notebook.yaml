apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: t1-workspace
  namespace: kubeflow-user-example-com
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: kubeflow.org/v1
kind: Notebook
metadata:
  annotations:
    notebooks.kubeflow.org/creator: user@example.com
    notebooks.kubeflow.org/server-type: jupyter
    container.apparmor.security.beta.kubernetes.io/t1: unconfined
  labels:
    app: t1
  name: t1
  namespace: kubeflow-user-example-com
spec:
  template:
    spec:
      containers:
      - env: []
        image: trandat81/jupyter-notebook:containerd-in-docker
        imagePullPolicy: Always #IfNotPresent
        name: t1
        securityContext:
          privileged: true  # Thêm dòng này
          seccompProfile:
            type: Unconfined
        resources:
          limits:
            cpu: "0.6"
            memory: 1.2Gi
          requests:
            cpu: "0.5"
            memory: 1Gi
        volumeMounts:
        - mountPath: /run/containerd/containerd.sock
          name: containerd-socket-pvc
        - mountPath: /lib/modules/
          name: lib-modules-pvc
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /home/jovyan
          name: t1-workspace
        - mountPath: /sys   # Mount /sys vào container
          name: sysfs
          readOnly: false
      serviceAccountName: default-editor
      tolerations: []
      volumes:
      - name: containerd-socket-pvc
        persistentVolumeClaim:
          claimName: containerd-socket-pvc
          readOnly: false
      - name: lib-modules-pvc
        persistentVolumeClaim:
          claimName: lib-modules-pvc
          readOnly: false
      - emptyDir:
          medium: Memory
        name: dshm
      - name: t1-workspace
        persistentVolumeClaim:
          claimName: t1-workspace
      - name: sysfs  # Thêm volume mount cho /sys
        hostPath:
          path: /sys
          type: Directory
